# This is a basic workflow to help you get started with Actions
name: deploy-to-k8s

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  OWNER: ${{ github.actor }}
  IMAGE_NAME: ${{github.event.repository.name}}

on:
  push:
    branches: ["development", "main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: mvn package
        run: mvn package

      - uses: actions/upload-artifact@master
        with:
          name: target-folder
          path: ./target

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          release_branches: "main,development,hotfix/*,release/*"
          github_token: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      APP_VERSION: ${{ steps.tag_version.outputs.new_tag }}
      APP_CHANGELOG: ${{ steps.tag_version.outputs.changelog }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
      APP_CHANGELOG: ${{ needs.build.outputs.CHANGELOG }}
    steps:
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.APP_VERSION }}
          name: Release ${{ env.APP_VERSION }}
          body: ${{ env.APP_CHANGELOG }}

  build-and-tag-docker:
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
    permissions:
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: target-folder
          path: ./target

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: "v1.13.0"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.APP_VERSION }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./src/main/docker/Dockerfile.jvm
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}

  deploy:
    environment: k3s-oracle-cloud
    needs: [build, build-and-tag-docker]
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          MAILJET_USERNAME: ${{ secrets.MAILJET_USERNAME }}
          MAILJET_PASSWORD: ${{ secrets.MAILJET_PASSWORD }}
          CKM_MAIL_TO_ADDRESS: ${{ secrets.CKM_MAIL_TO_ADDRESS }}
          HELM_FILE_BASE_PATH: ./helm/${{ env.IMAGE_NAME }}
        with:
          args: |
            helm upgrade --install ${{ env.IMAGE_NAME }} ${{ ENV.HELM_FILE_BASE_PATH }} -f ${{ENV.HELM_FILE_BASE_PATH}}/values.yaml --set image.tag=${{ env.APP_VERSION }} --set quarkus.mailer.username=${{ ENV.MAILJET_USERNAME }} --set quarkus.mailer.password=${{ ENV.MAILJET_PASSWORD }} --namespace production
